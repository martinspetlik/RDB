DROP PROCEDURE IF EXISTS `_idempotent_script`;

DELIMITER //

CREATE PROCEDURE `_idempotent_script`()
BEGIN
  DECLARE CurrentMigration TEXT;

  IF EXISTS(SELECT 1 FROM information_schema.tables 
  WHERE table_name = '__MigrationHistory' 
  AND table_schema = DATABASE()) THEN 
    SET CurrentMigration = (SELECT
`Project1`.`MigrationId`
FROM `__MigrationHistory` AS `Project1`
 WHERE `Project1`.`ContextKey` = 'RDB.Data.Migrations.Configuration'
 ORDER BY 
`Project1`.`MigrationId` DESC LIMIT 1);
  END IF;

  IF CurrentMigration IS NULL THEN
    SET CurrentMigration = '0';
  END IF;

  IF CurrentMigration < '201904291720514_Init' THEN 
create table `Autobus` (`spz` nvarchar(50)  not null collate utf8_bin ,`znacka` nvarchar(50)  not null collate utf8_bin ,primary key ( `spz`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_znacka` on `Autobus` (`znacka` DESC) using HASH;
create table `Znacka` (`znacka` nvarchar(50)  not null collate utf8_bin ,primary key ( `znacka`) ) engine=InnoDb auto_increment=0;
create table `Klient` (`email` nvarchar(50)  not null collate utf8_bin ,`jmeno` nvarchar(50)  not null ,`prijmeni` nvarchar(50)  not null ,primary key ( `email`) ) engine=InnoDb auto_increment=0;
create table `Kontakt` (`hodnota` nvarchar(50)  not null collate utf8_bin ,`typ` nvarchar(50)  not null ,`cislo_rp` nvarchar(50)  not null ,primary key ( `hodnota`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_typ` on `Kontakt` (`typ` DESC) using HASH;
CREATE index  `IX_cislo_rp` on `Kontakt` (`cislo_rp` DESC) using HASH;
create table `TypKontaktu` (`typ` nvarchar(50)  not null collate utf8_bin ,primary key ( `typ`) ) engine=InnoDb auto_increment=0;
create table `Ridic` (`cislo_rp` nvarchar(50)  not null collate utf8_bin ,`jmeno` nvarchar(50)  not null ,`prijmeni` nvarchar(50)  not null ,primary key ( `cislo_rp`) ) engine=InnoDb auto_increment=0;
create table `Jizda` (`linka` nvarchar(50)  not null collate utf8_bin ,`spz` nvarchar(50)  not null ,`cislo_rp` nvarchar(50)  not null ,`cas` timestamp(5) not null ,primary key ( `cas`,`linka`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_linka` on `Jizda` (`linka` DESC) using HASH;
CREATE index  `IX_spz` on `Jizda` (`spz` DESC) using HASH;
CREATE index  `IX_cislo_rp` on `Jizda` (`cislo_rp` DESC) using HASH;
create table `Trasy` (`linka` nvarchar(50)  not null collate utf8_bin ,`odkud` nvarchar(50)  not null ,`kam` nvarchar(50)  not null ,primary key ( `linka`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_odkud` on `Trasy` (`odkud` DESC) using HASH;
CREATE index  `IX_kam` on `Trasy` (`kam` DESC) using HASH;
create table `Lokalita` (`nazev` nvarchar(50)  not null collate utf8_bin ,primary key ( `nazev`) ) engine=InnoDb auto_increment=0;
create table `Mezizastavka` (`nazev` nvarchar(50)  not null collate utf8_bin ,`linka` nvarchar(50)  not null collate utf8_bin ,primary key ( `nazev`,`linka`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_nazev` on `Mezizastavka` (`nazev` DESC) using HASH;
CREATE index  `IX_linka` on `Mezizastavka` (`linka` DESC) using HASH;
create table `Jizdenka` (`linka` nvarchar(50) not null collate utf8_bin, `email` nvarchar(50) collate utf8_bin, `cas` timestamp(5) not null ,`cislo` bigint not null  auto_increment, primary key ( `cislo`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_cas_linka` on `Jizdenka` (`cas` DESC,`linka` DESC) using HASH;
CREATE index  `IX_email` on `Jizdenka` (`email` DESC) using HASH;
alter table `Autobus` add constraint `FK_Autobus_Znacka_znacka`  foreign key (`znacka`) references `Znacka` ( `znacka`)  on update cascade on delete cascade ;
alter table `Kontakt` add constraint `FK_Kontakt_TypKontaktu_typ`  foreign key (`typ`) references `TypKontaktu` ( `typ`)  on update cascade on delete cascade ;
alter table `Kontakt` add constraint `FK_Kontakt_Ridic_cislo_rp`  foreign key (`cislo_rp`) references `Ridic` ( `cislo_rp`)  on update cascade on delete cascade ;
alter table `Jizda` add constraint `FK_Jizda_Autobus_spz`  foreign key (`spz`) references `Autobus` ( `spz`)  on update cascade on delete cascade ;
alter table `Jizda` add constraint `FK_Jizda_Ridic_cislo_rp`  foreign key (`cislo_rp`) references `Ridic` ( `cislo_rp`)  on update cascade on delete cascade ;
alter table `Jizda` add constraint `FK_Jizda_Trasy_linka`  foreign key (`linka`) references `Trasy` ( `linka`)  on update cascade on delete cascade ;
alter table `Trasy` add constraint `FK_Trasy_Lokalita_kam`  foreign key (`kam`) references `Lokalita` ( `nazev`) ;
alter table `Trasy` add constraint `FK_Trasy_Lokalita_odkud`  foreign key (`odkud`) references `Lokalita` ( `nazev`) ;
alter table `Mezizastavka` add constraint `FK_Mezizastavka_Lokalita_nazev`  foreign key (`nazev`) references `Lokalita` ( `nazev`)  on update cascade on delete cascade ;
alter table `Mezizastavka` add constraint `FK_Mezizastavka_Trasy_linka`  foreign key (`linka`) references `Trasy` ( `linka`)  on update cascade on delete cascade ;
alter table `Jizdenka` add constraint `FK_Jizdenka_Klient_email`  foreign key (`email`) references `Klient` ( `email`) ;
alter table `Jizdenka` add constraint `FK_Jizdenka_Jizda_cas_linka`  foreign key (`cas`,`linka`) references `Jizda` ( `cas`,`linka`) ;
create table `__MigrationHistory` (`MigrationId` nvarchar(150)  not null ,`ContextKey` nvarchar(300)  not null ,`Model` longblob not null ,`ProductVersion` nvarchar(32)  not null ,primary key ( `MigrationId`) ) engine=InnoDb auto_increment=0;
INSERT INTO `__MigrationHistory`(
`MigrationId`, 
`ContextKey`, 
`Model`, 
`ProductVersion`) VALUES (
'201904291720514_Init', 
'RDB.Data.Migrations.Configuration', 
0x
'6.2.0-61023');
  END IF;

END //

DELIMITER ;

CALL `_idempotent_script`();

DROP PROCEDURE IF EXISTS `_idempotent_script`;

